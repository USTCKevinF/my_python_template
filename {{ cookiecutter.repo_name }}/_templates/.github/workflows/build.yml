{% raw %}name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [{% endraw %}{% for version in cookiecutter._all_python_version if version >= cookiecutter.minimal_python_version %}"{{ version }}"{% if not loop.last %}, {% endif %}{% endfor %}{% raw %}]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: make poetry-download

    - name: Set up cache
      uses: actions/cache@v2.1.6
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run style checks
      run: |
        make check-codestyle

    - name: Run tests
      run: |
        make test

    - name: Run safety checks
      run: |
        make check-safety{% endraw %}
